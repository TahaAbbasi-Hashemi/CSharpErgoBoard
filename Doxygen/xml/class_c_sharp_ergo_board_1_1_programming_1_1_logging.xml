<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_c_sharp_ergo_board_1_1_programming_1_1_logging" kind="class" language="C#" prot="public">
    <compoundname>CSharpErgoBoard::Programming::Logging</compoundname>
    <basecompoundref refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton" prot="public" virt="non-virtual">CSharpErgoBoard.Programming.Singleton</basecompoundref>
    <innerclass refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1_1_log_data" prot="private">CSharpErgoBoard::Programming::Logging::LogData</innerclass>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a9d40de21b76bbc7bcc2ced1c7dbc25e4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>new String</type>
        <definition>new String CSharpErgoBoard.Programming.Logging.Name</definition>
        <argsstring></argsstring>
        <name>Name</name>
        <initializer>= &quot;Logging&quot;</initializer>
        <briefdescription>
<para>The name of the class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="27" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab68b1cb6895ad5cf9204d401cc079353" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>new String</type>
        <definition>new String CSharpErgoBoard.Programming.Logging.Purpose</definition>
        <argsstring></argsstring>
        <name>Purpose</name>
        <initializer>= &quot;To record what happens during the lifespan of the program&quot;</initializer>
        <briefdescription>
<para>The purpose of the class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="31" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4e7c7186b9bce350b2eecbf9b0f99101" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>new String</type>
        <definition>new String CSharpErgoBoard.Programming.Logging.ToString</definition>
        <argsstring></argsstring>
        <name>ToString</name>
        <initializer>= &quot;A <ref refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton" kindref="compound">Singleton</ref> <ref refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging" kindref="compound">Logging</ref> Class&quot;</initializer>
        <briefdescription>
<para>To convert the class to a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="35" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ada4a05e0e1b2496fa75e36734a835ac8" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>String</type>
        <definition>String CSharpErgoBoard.Programming.Logging.LogFormat</definition>
        <argsstring></argsstring>
        <name>LogFormat</name>
        <briefdescription>
<para>This is the format that the log will be saved as. </para>
        </briefdescription>
        <detaileddescription>
<para>The default method is &quot;%D (%T), \&quot;F" L : M" as it contains all the nessary criteria. If you wish to create your own format you can use these variables to indicate properties of the log.</para>
<para><itemizedlist>
<listitem>
<para>D <linebreak/>
 would represent the date the log was made in YYYY-MM-DD  </para>
</listitem>
<listitem>
<para>T <linebreak/>
 would represent the time that the log was made in HH:MM:SS TT </para>
</listitem>
<listitem>
<para>t <linebreak/>
 woudl represent the thread that called the log. </para>
</listitem>
<listitem>
<para>F <linebreak/>
 would represent the file that the log was made in. </para>
</listitem>
<listitem>
<para>L <linebreak/>
 would represent the line that the log was written on. </para>
</listitem>
<listitem>
<para>M <linebreak/>
 would represent the message the log contains. </para>
</listitem>
<listitem>
<para>m <linebreak/>
 would represent the member of the class that called the log. </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="148" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab81c7ab97a076876bdaf53b992524d08" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>String</type>
        <definition>String CSharpErgoBoard.Programming.Logging.Directory</definition>
        <argsstring></argsstring>
        <name>Directory</name>
        <briefdescription>
<para>Logs must be saved in a file somewhere to be read, Directory is the name of the file where the logs are saved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="152" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a7ada93e9c9e9e815fbb7627e08292513" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>new <ref refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging" kindref="compound">Logging</ref></type>
        <definition>new Logging CSharpErgoBoard.Programming.Logging.Instance</definition>
        <argsstring></argsstring>
        <name>Instance</name>
        <briefdescription>
<para>This is the instance of the singleton class. Any commands must be called using </para>
        </briefdescription>
        <detaileddescription>
<para>A singleton class has one or no instances. In order to use the instance this must be called. This also starts the threading and logging process of the class. </para>
<para>Logging.Instance.LogFormat(&quot;%D %T : %M&quot;); // Changing the log format. Logging.Instance.Flush();// Flush the previously made logs. Logging.Instance.Log(&quot;Example of making a log&quot;); Logging.Instance.Log(&quot;Example of making a log with severity&quot;, &quot;Error&quot;); Logging.Instance.End() // Ends the logging process </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="167" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="168" bodyend="185"/>
      </memberdef>
      <memberdef kind="property" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a07e3b5e49dda9af9593fc4f0d00d64af" prot="protected" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool CSharpErgoBoard.Programming.Logging.IsFlushed</definition>
        <argsstring></argsstring>
        <name>IsFlushed</name>
        <briefdescription>
<para>A boolean value being used if we want to flush the system </para>
        </briefdescription>
        <detaileddescription>
<para>. by default this is false. It should be noted that this process is very quick, it may be missed if you are looking for it. <itemizedlist>
<listitem>
<para>true <linebreak/>
 If the logging process is being flushed </para>
</listitem>
<listitem>
<para>false <linebreak/>
 If the logging process is not being flushed. </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="197" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="197" bodyend="197"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a5c7bf7916c460eef3a7d645157615f5a" prot="private" static="yes" mutable="no">
        <type>String</type>
        <definition>String CSharpErgoBoard.Programming.Logging.m_logFormat</definition>
        <argsstring></argsstring>
        <name>m_logFormat</name>
        <initializer>= &quot;%D (%T), (%m) &lt;%L&gt; : %M&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="38" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1aef67f157b428d0f62edb51f4e93f1346" prot="private" static="yes" mutable="no">
        <type>String</type>
        <definition>String CSharpErgoBoard.Programming.Logging.m_directory</definition>
        <argsstring></argsstring>
        <name>m_directory</name>
        <initializer>= @&quot;C:\Users\Taha Abbasi-Hashemi\source\repos\CSharpErgoBoard\CSharpErgoBoard\Logs\Logs.log&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="39" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4961845e9fa3f7b7ad7ce4cb466444d3" prot="private" static="yes" mutable="no">
        <type>Boolean</type>
        <definition>Boolean CSharpErgoBoard.Programming.Logging.m_flush</definition>
        <argsstring></argsstring>
        <name>m_flush</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="40" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1adec318e409e810d3c7c0a9f4d093a47a" prot="private" static="yes" mutable="no">
        <type>new <ref refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging" kindref="compound">Logging</ref></type>
        <definition>new Logging CSharpErgoBoard.Programming.Logging.m_instance</definition>
        <argsstring></argsstring>
        <name>m_instance</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="41" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a31673549d6fc76fed39060a2fc129e10" prot="private" static="yes" mutable="no">
        <type>readonly Queue&lt; LogData &gt;</type>
        <definition>readonly Queue&lt;LogData&gt; CSharpErgoBoard.Programming.Logging.m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <initializer>= new Queue&lt;LogData&gt;()</initializer>
        <briefdescription>
<para>The data queue of logs being saved </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="116" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4682ffdf3f5f2f61d5341970bc4ddf52" prot="private" static="yes" mutable="no">
        <type>readonly Mutex</type>
        <definition>readonly Mutex CSharpErgoBoard.Programming.Logging.m_outputLock</definition>
        <argsstring></argsstring>
        <name>m_outputLock</name>
        <initializer>= new Mutex()</initializer>
        <briefdescription>
<para>This is used to ensure that our queue is thread safe </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="120" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ac160d5fc8d3adfaacc6ff5997269cba9" prot="protected" static="yes" mutable="no">
        <type>new readonly Thread</type>
        <definition>new readonly Thread CSharpErgoBoard.Programming.Logging.m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <initializer>= new Thread(ThreadFunction)</initializer>
        <briefdescription>
<para>The thread run by the singleton </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="124" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab39afcf02e10e12b953f80c50c92ad5e" prot="protected" static="yes" mutable="no">
        <type>new readonly Object</type>
        <definition>new readonly Object CSharpErgoBoard.Programming.Logging.m_padlock</definition>
        <argsstring></argsstring>
        <name>m_padlock</name>
        <initializer>= new Object()</initializer>
        <briefdescription>
<para>To ensure that our singleton is thread safe </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="128" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a67a509a7ebd3f1b873e592b30c2d71bd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static CSharpErgoBoard.Programming.Logging.Logging</definition>
        <argsstring>()</argsstring>
        <name>Logging</name>
        <briefdescription>
<para>The default static constructor. This is neither public or private intentionally to allow for singleton class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="204" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a47bc42acab32e094b10082d691b515df" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>new void</type>
        <definition>static new void CSharpErgoBoard.Programming.Logging.ThreadFunction</definition>
        <argsstring>()</argsstring>
        <name>ThreadFunction</name>
        <briefdescription>
<para>This function is run by the thread. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to save the logging process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="247" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="247" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a994e75352bc9557d47e9a9b2bfb7d78b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void CSharpErgoBoard.Programming.Logging.Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Removes all previously made logs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="208" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="208" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a9615e81de1ad9899a60cb6c9b949e4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSharpErgoBoard.Programming.Logging.Log</definition>
        <argsstring>(in String message, in String severity=&quot;&quot;, [System.Runtime.CompilerServices.CallerMemberName] in String memberName=&quot;&quot;, [System.Runtime.CompilerServices.CallerFilePath] in String filePath=&quot;&quot;, [System.Runtime.CompilerServices.CallerLineNumber] in Int32 lineNumber=0)</argsstring>
        <name>Log</name>
        <param>
          <type>in String</type>
          <declname>message</declname>
        </param>
        <param>
          <type>in String</type>
          <declname>severity</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <attributes>[System.Runtime.CompilerServices.CallerMemberName]</attributes>
          <type>in String</type>
          <declname>memberName</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <attributes>[System.Runtime.CompilerServices.CallerFilePath]</attributes>
          <type>in String</type>
          <declname>filePath</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <attributes>[System.Runtime.CompilerServices.CallerLineNumber]</attributes>
          <type>in Int32</type>
          <declname>lineNumber</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>This function creates a log to be saved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the message you want saved to log. This is mandatory to have</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>severity</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the severity of the message, current TBA</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memberName</parametername>
</parameternamelist>
<parameterdescription>
<para>Using macros finds the member name that made the log</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>Using macros finds the current file name that the log was made on</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>Using macros finds the line number that the log was made on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="220" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="220" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a49a09843bb0704dcc91c36efdad7766f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void CSharpErgoBoard.Programming.Logging.End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <reimplements refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton_1a7bc21df69ac9302a5ebb17dce769560a">End</reimplements>
        <briefdescription>
<para>This stops the threading process, if this function is not called, then the program can not close. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="330" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="330" bodyend="335"/>
        <references refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton_1ab721e618aad538a1fff8aa386401aebc" compoundref="_singleton_8cs" startline="37">CSharpErgoBoard.Programming.Singleton.m_running</references>
        <references refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ac160d5fc8d3adfaacc6ff5997269cba9" compoundref="_logging_8cs" startline="124">CSharpErgoBoard.Programming.Logging.m_thread</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The logging class is used to record what happens during runtime of the program. </para>
    </briefdescription>
    <detaileddescription>
<para>This is a singleton class used to record actions done during runtime of the the program. Because the logging system is singleton based any class can call it as long as it is in the scope. This allows for benifits of not having multiple logging sections in the program. The logging class is thread safe, and uses locks. <linebreak/>
 <linebreak/>
For more information regarding singleton please see <ref refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton" kindref="compound">Singleton</ref> class. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>Singleton</label>
        <link refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton"/>
      </node>
      <node id="6">
        <label>CSharpErgoBoard.Programming.Logging</label>
        <link refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>CSharpErgoBoard.Programming.Singleton</label>
        <link refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Singleton</label>
        <link refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CSharpErgoBoard.Programming.Logging</label>
        <link refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" line="22" column="1" bodyfile="C:/Users/Taha Abbasi-Hashemi/source/repos/CSharpErgoBoard/CSharpErgoBoard/Programming/Logging.cs" bodystart="21" bodyend="336"/>
    <listofallmembers>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab81c7ab97a076876bdaf53b992524d08" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Directory</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a49a09843bb0704dcc91c36efdad7766f" prot="public" virt="virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>End</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a994e75352bc9557d47e9a9b2bfb7d78b" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Flush</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a7ada93e9c9e9e815fbb7627e08292513" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Instance</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a07e3b5e49dda9af9593fc4f0d00d64af" prot="protected" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>IsFlushed</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a9615e81de1ad9899a60cb6c9b949e4c8" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Log</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ada4a05e0e1b2496fa75e36734a835ac8" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>LogFormat</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a67a509a7ebd3f1b873e592b30c2d71bd" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Logging</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1aef67f157b428d0f62edb51f4e93f1346" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_directory</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4961845e9fa3f7b7ad7ce4cb466444d3" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_flush</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1adec318e409e810d3c7c0a9f4d093a47a" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_instance</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a5c7bf7916c460eef3a7d645157615f5a" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_logFormat</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a31673549d6fc76fed39060a2fc129e10" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_output</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4682ffdf3f5f2f61d5341970bc4ddf52" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_outputLock</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab39afcf02e10e12b953f80c50c92ad5e" prot="protected" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_padlock</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_singleton_1ab721e618aad538a1fff8aa386401aebc" prot="protected" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_running</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ac160d5fc8d3adfaacc6ff5997269cba9" prot="protected" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>m_thread</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a9d40de21b76bbc7bcc2ced1c7dbc25e4" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Name</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1ab68b1cb6895ad5cf9204d401cc079353" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>Purpose</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a47bc42acab32e094b10082d691b515df" prot="private" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>ThreadFunction</name></member>
      <member refid="class_c_sharp_ergo_board_1_1_programming_1_1_logging_1a4e7c7186b9bce350b2eecbf9b0f99101" prot="public" virt="non-virtual"><scope>CSharpErgoBoard::Programming::Logging</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
